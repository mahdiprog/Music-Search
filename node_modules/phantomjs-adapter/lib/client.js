'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _map = require('babel-runtime/core-js/map');

var _map2 = _interopRequireDefault(_map);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _ndjson = require('ndjson');

var _esnextAsync = require('esnext-async');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var RequestQueue = function () {
  function RequestQueue() {
    (0, _classCallCheck3.default)(this, RequestQueue);

    this.nextId = 1;
    this.requests = new _map2.default();
  }

  (0, _createClass3.default)(RequestQueue, [{
    key: 'defer',
    value: function defer(makeRequest) {
      var _this = this;

      return new _promise2.default(function (resolve, reject) {
        var id = _this.nextId;
        _this.nextId += 1;
        _this.requests.set(id, { resolve: resolve, reject: reject });
        makeRequest(id);
      });
    }
  }, {
    key: 'resolve',
    value: function resolve(id, response) {
      this.requests.get(id).resolve(response);
      this.requests.delete(id);
    }
  }, {
    key: 'reject',
    value: function reject(id, error) {
      this.requests.get(id).reject(error);
      this.requests.delete(id);
    }
  }]);
  return RequestQueue;
}();

var StdioAdapter = function () {
  function StdioAdapter(serverProcess) {
    (0, _classCallCheck3.default)(this, StdioAdapter);

    this.inputStream = (0, _ndjson.serialize)();
    this.inputStream.on('data', function (line) {
      serverProcess.stdin.write(line);
    });

    this.outputStream = serverProcess.stdout.pipe((0, _ndjson.parse)());
  }

  (0, _createClass3.default)(StdioAdapter, [{
    key: 'read',
    value: function read(consume) {
      this.outputStream.on('data', consume);
    }
  }, {
    key: 'write',
    value: function write(payload) {
      this.inputStream.write(payload);
    }
  }]);
  return StdioAdapter;
}();

var _default = function () {
  function _default(serverProcess) {
    var _this2 = this;

    (0, _classCallCheck3.default)(this, _default);

    this.requests = new RequestQueue();
    this.stdio = new StdioAdapter(serverProcess);

    this.stdio.read(function (payload) {
      if ('result' in payload) {
        _this2.requests.resolve(payload.id, payload.result);
      } else if ('error' in payload) {
        _this2.requests.reject(payload.id, new Error(payload.error));
      }
    });

    this.logs = new _esnextAsync.AwaitableObservable(function (logs) {
      _this2.stdio.read(function (payload) {
        if ('log' in payload) {
          logs.next(payload.log);
        }
      });
    });
  }

  (0, _createClass3.default)(_default, [{
    key: 'send',
    value: function send(method) {
      var _this3 = this;

      var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];

      return this.requests.defer(function (id) {
        _this3.stdio.write({ id: id, method: method, params: params });
      });
    }
  }]);
  return _default;
}();

exports.default = _default;